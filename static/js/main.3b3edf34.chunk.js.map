{"version":3,"sources":["api.ts","components/NewComment.tsx","assets/heart-regular.svg","assets/heart-solid.svg","components/Comment.tsx","components/CommentsList.tsx","App.tsx","index.js"],"names":["getComments","url","fetch","options","then","res","ok","Error","json","NewComment","useState","newComment","setNewComment","setCommentAdded","className","placeholder","type","value","onChange","event","target","onClick","data","preventDefault","method","body","JSON","stringify","title","userId","headers","response","console","log","Comment","comment","liked","setLiked","src","heartSolid","alt","heart","CommentsList","comments","map","id","App","setComments","useEffect","loadedComments","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAcaA,EAAc,WACzB,OAXsBC,EAWP,SAVRC,MAAM,GAAD,OAHU,wCAGV,OAAeD,GAAOE,GAC/BC,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,SAElB,OAAOF,EAAIG,UANM,IAACP,EAAaE,G,OCDxBM,EAAa,SAAC,GAAS,eAChC,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,oBAAS,GAAjD,mBAAqBG,GAArB,WAaA,OACI,sBAAKC,UAAU,aAAf,UACI,uBACIC,YAAY,aACZD,UAAU,oBACVE,KAAK,OAAOC,MAAON,EACnBO,SAjBc,SAACC,GACvBP,EAAcO,EAAMC,OAAOH,UAkBvB,sBAAKH,UAAU,sBAAf,UACI,+CACA,wBAAQE,KAAK,SAASK,QAjBZ,SAACF,GDOG,IAACG,ECNvBH,EAAMI,kBDMiBD,ECJRX,EDKdT,MAAM,6CAA8C,CACzDsB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,MACPH,KAAMH,EACNO,OAAQ,IAEVC,QAAS,CACP,eAAgB,qCAGjB1B,MAAK,SAAC2B,GAAD,OAAcA,EAASvB,UAC5BJ,MAAK,SAACI,GAAD,OAAUwB,QAAQC,IAAIzB,OCjBGJ,MAAK,kBAAMS,GAAgB,OAc9C,yBC5BD,MAA0B,0CCA1B,MAA0B,wCCe5BqB,EAA2B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvC,EAA0BzB,oBAAS,GAAnC,mBAAO0B,EAAP,KAAcC,EAAd,KAMA,OACI,sBAAKvB,UAAU,UAAf,UACI,8BAAMqB,EAAQP,QACd,qBAAKd,UAAU,gBAAf,SAAgCqB,EAAQV,OACxC,qBAAKX,UAAU,+BAA+BO,QARnC,WACfgB,GAAUD,IAON,SAEQA,EACI,qBAAKtB,UAAU,uBAAuBwB,IAAKC,EAAYC,IAAI,gBAE3D,qBAAK1B,UAAU,uBAAuBwB,IAAKG,EAAOD,IAAI,sBCjBjEE,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,OACE,8BAEIA,EAASC,KAAI,SAAAT,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQU,UCSvCC,MArBf,WACE,MAAgCpC,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBI,EAAjB,KAQA,OANAC,qBAAU,WACRhD,IAAcI,MAAK,SAAA6C,GAAc,OAAIF,EAAYE,QAChD,IAKD,qBAAKnC,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACE,uCACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAc6B,SAAUA,UChBhCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3b3edf34.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const request = (url: string, options?: RequestInit | undefined) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Error');\n      }\n      return res.json();\n    })\n}\n\nexport const getComments = () => {    //[{}, {}]\n  return request(`/posts`);\n};\n\nexport const postNewComment = (data: string) => {\n  return fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    body: JSON.stringify({\n      title: 'foo',\n      body: data,\n      userId: 1,\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then((response) => response.json())\n    .then((json) => console.log(json));\n\n}","import React, { useState, useEffect } from 'react';\nimport { postNewComment } from '../api';\n\nexport const NewComment = ({ }) => {\n    const [newComment, setNewComment] = useState('');\n    const [commentAdded, setCommentAdded] = useState(false);\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setNewComment(event.target.value);\n    }\n\n    const handleSending = (event: React.FormEvent<EventTarget>) => {\n        event.preventDefault();\n\n        postNewComment(newComment).then(() => setCommentAdded(true))\n    }\n\n\n    return (\n        <div className=\"newComment\">\n            <input\n                placeholder=\"What's up?\"\n                className=\"newComment__input\"\n                type=\"text\" value={newComment}\n                onChange={handleInputChange}\n            />\n            <div className=\"newComment__buttons\">\n                <button>Add Media</button>\n                <button type=\"submit\" onClick={handleSending}>send</button>\n            </div>\n        </div>\n    )\n\n}","export default __webpack_public_path__ + \"static/media/heart-regular.f358882f.svg\";","export default __webpack_public_path__ + \"static/media/heart-solid.70b72c45.svg\";","import React, { DOMAttributes, MouseEventHandler, useState } from 'react';\nimport heart from '../assets/heart-regular.svg';\nimport heartSolid from '../assets/heart-solid.svg';\n\nexport interface CommentType {\n    \"userId\": number,\n    \"id\": number,\n    \"title\": string,\n    \"body\": string,\n}\n\ninterface Props {\n    comment: CommentType;\n}\n\nexport const Comment: React.FC<Props> = ({ comment }) => {\n    const [liked, setLiked] = useState(false);\n\n    const handleLike = () => {\n        setLiked(!liked);\n    }\n\n    return (\n        <div className=\"Comment\">\n            <div>{comment.title}</div>\n            <div className=\"Comment__body\">{comment.body}</div>\n            <div className=\"Comment__like-button-wrapper\" onClick={handleLike}>\n                {\n                    liked ?\n                        <img className=\"Comment__like-button\" src={heartSolid} alt=\"like button\" />\n                        :\n                        <img className=\"Comment__like-button\" src={heart} alt=\"like button\" />\n                }\n            </div>\n\n        </div>\n\n    )\n}","import React, { useState } from 'react';\nimport { Comment } from './Comment';\n\nexport interface CommentType {\n  \"userId\": number,\n  \"id\": number,\n  \"title\": string,\n  \"body\": string,\n}\n\ninterface Props {\n  comments: CommentType[];\n}\n\nexport const CommentsList: React.FC<Props> = ({ comments }) => {\n  return (\n    <div>\n      {\n        comments.map(comment => <Comment key={comment.id} comment={comment} />)\n      }\n    </div>\n  )\n}","import './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport { NewComment } from './components/NewComment';\nimport { CommentsList } from './components/CommentsList';\nimport { getComments } from './api';\n\nfunction App() {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    getComments().then(loadedComments => setComments(loadedComments))\n  }, []);\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-wrapper\">\n        <div>Home</div>\n        <NewComment />\n        <CommentsList comments={comments} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}